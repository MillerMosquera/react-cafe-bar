{"version":3,"sources":["app/components/menu/buttonPdf.jsx","app/components/menu/alert.jsx","app/components/hooks/usePagination.jsx"],"names":["LoadingButton","useState","isLoading","setLoading","useEffect","Promise","resolve","setTimeout","then","Button","variant","className","disabled","onClick","alertamsg","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","fire","icon","title","usePagination","offset","setOffset","data","setData","perPage","pageCount","setPageCount","useLocalStorage","datos","setDatos","getData","a","axios","get","res","slice","postData","map","pd","src","imgSrc","alt","precio","descripcion","value","e","id","Math","ceil","length","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","activeClassName"],"mappings":"6OAOe,SAASA,IACpB,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACFF,GAPD,IAAIG,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAAS,QAQlCE,MAAK,WACXL,GAAW,QAGpB,CAACD,IAIJ,OACI,cAACO,EAAA,EAAD,CACIC,QAAQ,QACRC,UAAU,UACVC,SAAUV,EACVW,QAAUX,EAA0B,KAPxB,kBAAMC,GAAW,IAGjC,SAMKD,EAAY,oBAAiB,sB,8BCP3BY,EAlBG,WACAC,IAAKC,MAAM,CACrBC,OAAO,EACPC,SAAU,UACVC,mBAAmB,EACnBC,MAAO,IACPC,kBAAkB,EAClBC,QAAS,SAACL,GACNA,EAAMM,iBAAiB,aAAcR,IAAKS,WAC1CP,EAAMM,iBAAiB,aAAcR,IAAKU,gBAG5CC,KAAK,CACPC,KAAM,UACNC,MAAO,yBCgFAC,UAtFf,WACE,MAA4B5B,mBAAS,GAArC,mBAAO6B,EAAP,KAAeC,EAAf,KACA,EAAwB9B,mBAAS,IAAjC,mBAAO+B,EAAP,KAAaC,EAAb,KACA,EAAkBhC,mBAAS,IAApBiC,EAAP,oBACA,EAAkCjC,mBAAS,GAA3C,mBAAOkC,EAAP,KAAkBC,EAAlB,KAEA,EAA0BC,YAAgB,GAAI,SAA9C,mBAAOC,EAAP,KAAcC,EAAd,KAMMC,EAAO,uCAAG,kCAAAC,EAAA,sEACIC,IAAMC,IAAN,oDADJ,OACRC,EADQ,OAIRZ,EAAOY,EAAIZ,KACXa,EAAQb,EAAKa,MAAMf,EAAQA,EAASI,GACpCY,EAAWD,EAAME,KAAI,SAACC,GAAD,OACzB,yBAAqBrC,UAAU,OAA/B,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,sBAAKA,UAAU,4BAAf,UACE,qBAAKsC,IAAKD,EAAGE,OAAQvC,UAAU,WAAWwC,IAAI,KAC9C,sBAAKxC,UAAU,eAAf,UACE,uBAAOA,UAAU,SAAjB,SAA2BqC,EAAGpB,QAC9B,uBAAMjB,UAAU,SAAhB,UAA0BqC,EAAGI,OAA7B,WAEF,qBAAKzC,UAAU,mBAAf,SACE,oBAAGA,UAAU,UAAb,UACGqC,EAAGK,YACJ,mBACE1C,UAAU,0BACV2C,MAAOhB,EACPzB,QAAS,WACP0B,GAAS,SAACgB,GAAD,4BAAWA,GAAX,CAAcP,OAAMlC,oBAhB/BkC,EAAGQ,OA0BnBvB,EAAQa,GACRV,EAAaqB,KAAKC,KAAK1B,EAAK2B,OAASzB,IAlCvB,2CAAH,qDAiDb,OAPA9B,qBAAU,WAERoC,MAEC,CAACV,IAIF,0BAASnB,UAAU,UAAnB,UACE,sBAAKA,UAAU,cAAf,UACE,uBAAOA,UAAU,YAAjB,qBACA,cAAC,EAAD,OAEF,qBAAKA,UAAU,cAAf,SAA8BqB,IAC9B,8BACE,cAAC,IAAD,CACE4B,cAAe,WACfC,UAAW,YACXC,WAAY,MACZC,eAAgB,WAChB5B,UAAWA,EACX6B,qBAAsB,EACtBC,mBAAoB,EACpBC,aA5BgB,SAACX,GACvB,IAAMY,EAAeZ,EAAEa,SACvBrC,EAAUoC,EAAejC,IA2BnBmC,mBAAoB,aACpBC,gBAAiB","file":"static/js/4.ef92277d.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap'\n\nconst Request =  () => {\n    return new Promise((resolve) => setTimeout(resolve, 2000));\n}\n\nexport default function LoadingButton() {\n    const [isLoading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (isLoading) {\n            Request().then(() => {\n                setLoading(false);\n            });\n        }\n    }, [isLoading]);\n\n    const handleClick = () => setLoading(true);\n\n    return (\n        <Button\n            variant=\"ligth\"\n            className='btn-pdf'\n            disabled={isLoading}\n            onClick={!isLoading ? handleClick : null}\n        >\n            {isLoading ? 'Descargando…' : 'Descargar menú'}\n        </Button>\n    );\n}\n","import Swal from \"sweetalert2\";\n\nconst alertamsg = () => {\n    const Toast = Swal.mixin({\n        toast: true,\n        position: \"top-end\",\n        showConfirmButton: false,\n        timer: 3000,\n        timerProgressBar: true,\n        didOpen: (toast) => {\n            toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n            toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n        },\n    });\n    Toast.fire({\n        icon: \"success\",\n        title: \"Agregado al carrito\",\n    });\n};\n\nexport default alertamsg;","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ReactPaginate from \"react-paginate\";\nimport \"bootstrap\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"../menu/menu.css\";\nimport Button from '../menu/buttonPdf'\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport alertamsg from '../menu/alert'\n\nfunction usePagination() {\n  const [offset, setOffset] = useState(0);\n  const [data, setData] = useState([]);\n  const [perPage] = useState(12);\n  const [pageCount, setPageCount] = useState(0);\n\n  const [datos, setDatos] = useLocalStorage([], \"datos\");\n\n//function \n  \n  \n\n  const getData = async () => {\n    const res = await axios.get(\n      `https://617716f19c328300175f57cb.mockapi.io/menu`\n    );\n    const data = res.data;\n    const slice = data.slice(offset, offset + perPage);\n    const postData = slice.map((pd) => (\n      <section key={pd.id} className=\"menu\">\n        <div className=\"container\">\n          <div className=\"menu-container\">\n            <div className=\"menu-item filter-starters\">\n              <img src={pd.imgSrc} className=\"menu-img\" alt=\"\" />\n              <div className=\"menu-content\">\n                <label className=\"nombre\">{pd.title}</label>\n                <span className=\"precio\">{pd.precio} $</span>\n              </div>\n              <div className=\"menu-ingredients\">\n                <p className=\"descrip\">\n                  {pd.descripcion}\n                  <i\n                    className=\"bi-cart add-to-cart-btn\"\n                    value={datos}\n                    onClick={() => {\n                      setDatos((e) => [...e, pd]); alertamsg()\n                    }}\n                  ></i>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    ));\n    setData(postData);\n    setPageCount(Math.ceil(data.length / perPage));\n  };\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setOffset(selectedPage * perPage);  \n  };\n\n  useEffect(() => {\n    // eslint-disable-next-line\n    getData();\n    // eslint-disable-next-line\n  }, [offset]);\n\n\n  return (\n    <section className=\"section\">\n      <div className=\"menu-button\">\n        <label className=\"text-menu\">Menú</label>\n        <Button />\n      </div>\n      <div className=\"platos-menu\">{data}</div>\n      <div>\n        <ReactPaginate\n          previousLabel={\"Anterior\"}\n          nextLabel={\"Siguiente\"}\n          breakLabel={\"...\"}\n          breakClassName={\"break-me\"}\n          pageCount={pageCount}\n          marginPagesDisplayed={2}\n          pageRangeDisplayed={3}\n          onPageChange={handlePageClick}\n          containerClassName={\"pagination\"}\n          activeClassName={\"active\"}\n        />\n      </div>\n    </section>\n  );\n}\n\nexport default usePagination;\n"],"sourceRoot":""}