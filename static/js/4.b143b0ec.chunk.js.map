{"version":3,"sources":["app/components/menu/buttonPdf.jsx","app/components/hooks/usePagination.jsx"],"names":["LoadingButton","useState","isLoading","setLoading","useEffect","Promise","resolve","setTimeout","then","Button","variant","className","disabled","onClick","usePagination","offset","setOffset","data","setData","perPage","pageCount","setPageCount","getData","a","axios","get","res","slice","postData","map","pd","src","imgSrc","alt","title","precio","descripcion","alertamsg","id","Math","ceil","length","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","fire","icon","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","activeClassName"],"mappings":"2PAOe,SAASA,IACpB,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACFF,GAPD,IAAIG,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAAS,QAQlCE,MAAK,WACXL,GAAW,QAGpB,CAACD,IAIJ,OACI,cAACO,EAAA,EAAD,CACIC,QAAQ,QACRC,UAAU,UACVC,SAAUV,EACVW,QAAUX,EAA0B,KAPxB,kBAAMC,GAAW,IAGjC,SAMKD,EAAY,oBAAiB,sBC6E3BY,UA/Ff,WACE,MAA4Bb,mBAAS,GAArC,mBAAOc,EAAP,KAAeC,EAAf,KACA,EAAwBf,mBAAS,IAAjC,mBAAOgB,EAAP,KAAaC,EAAb,KACA,EAAkBjB,mBAAS,IAApBkB,EAAP,oBACA,EAAkClB,mBAAS,GAA3C,mBAAOmB,EAAP,KAAkBC,EAAlB,KAKMC,EAAO,uCAAG,kCAAAC,EAAA,sEACIC,IAAMC,IAAN,oDADJ,OACRC,EADQ,OAIRT,EAAOS,EAAIT,KACXU,EAAQV,EAAKU,MAAMZ,EAAQA,EAASI,GACpCS,EAAWD,EAAME,KAAI,SAACC,GAAD,OACzB,yBAAqBnB,UAAU,OAA/B,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,sBAAKA,UAAU,4BAAf,UACE,qBAAKoB,IAAKD,EAAGE,OAAQrB,UAAU,WAAWsB,IAAI,KAC9C,sBAAKtB,UAAU,eAAf,UACE,uBAAOA,UAAU,SAAjB,SAA2BmB,EAAGI,QAC9B,sBAAMvB,UAAU,SAAhB,SAA0BmB,EAAGK,YAE/B,qBAAKxB,UAAU,mBAAf,SACE,oBAAGA,UAAU,UAAb,UACGmB,EAAGM,YACJ,mBACEzB,UAAU,0BACVE,QAAS,kBAAMwB,oBAdfP,EAAGQ,OAuBnBpB,EAAQU,GACRP,EAAakB,KAAKC,KAAKvB,EAAKwB,OAAStB,IA/BvB,2CAAH,qDAsCbf,qBAAU,WACRkB,MAEC,CAACP,IAGJ,IAAMsB,EAAY,WACFK,IAAKC,MAAM,CACvBC,OAAO,EACPC,SAAU,UACVC,mBAAmB,EACnBC,MAAO,IACPC,kBAAkB,EAClBC,QAAS,SAACL,GACRA,EAAMM,iBAAiB,aAAcR,IAAKS,WAC1CP,EAAMM,iBAAiB,aAAcR,IAAKU,gBAIxCC,KAAK,CACTC,KAAM,UACNpB,MAAO,yBAIX,OACE,0BAASvB,UAAU,UAAnB,UACE,uBAAOA,UAAU,YAAjB,qBACA,cAAC,EAAD,IACA,qBAAKA,UAAU,cAAf,SAA8BM,IAC9B,8BACE,cAAC,IAAD,CACEsC,cAAe,WACfC,UAAW,YACXC,WAAY,MACZC,eAAgB,WAChBtC,UAAWA,EACXuC,qBAAsB,EACtBC,mBAAoB,EACpBC,aA5CgB,SAACC,GACvB,IAAMC,EAAeD,EAAEE,SACvBhD,EAAU+C,EAAe,IA2CnBE,mBAAoB,aACpBC,gBAAiB","file":"static/js/4.b143b0ec.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap'\n\nconst Request =  () => {\n    return new Promise((resolve) => setTimeout(resolve, 2000));\n}\n\nexport default function LoadingButton() {\n    const [isLoading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (isLoading) {\n            Request().then(() => {\n                setLoading(false);\n            });\n        }\n    }, [isLoading]);\n\n    const handleClick = () => setLoading(true);\n\n    return (\n        <Button\n            variant=\"ligth\"\n            className='btn-pdf'\n            disabled={isLoading}\n            onClick={!isLoading ? handleClick : null}\n        >\n            {isLoading ? 'Descargando…' : 'Descargar menú'}\n        </Button>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ReactPaginate from \"react-paginate\";\nimport \"bootstrap\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"../menu/menu.css\";\nimport Swal from \"sweetalert2\";\nimport Button from '../menu/buttonPdf'\n\nfunction usePagination() {\n  const [offset, setOffset] = useState(0);\n  const [data, setData] = useState([]);\n  const [perPage] = useState(12);\n  const [pageCount, setPageCount] = useState(0);\n\n\n  //useLocalSotrage\n\n  const getData = async () => {\n    const res = await axios.get(\n      `https://617716f19c328300175f57cb.mockapi.io/menu`\n    );\n    const data = res.data;\n    const slice = data.slice(offset, offset + perPage);\n    const postData = slice.map((pd) => (\n      <section key={pd.id} className=\"menu\">\n        <div className=\"container\">\n          <div className=\"menu-container\">\n            <div className=\"menu-item filter-starters\">\n              <img src={pd.imgSrc} className=\"menu-img\" alt=\"\" />\n              <div className=\"menu-content\">\n                <label className=\"nombre\">{pd.title}</label>\n                <span className=\"precio\">{pd.precio}</span>\n              </div>\n              <div className=\"menu-ingredients\">\n                <p className=\"descrip\">\n                  {pd.descripcion}\n                  <i\n                    className=\"bi-cart add-to-cart-btn\"\n                    onClick={() => alertamsg()}\n                  ></i>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    ));\n    setData(postData);\n    setPageCount(Math.ceil(data.length / perPage));\n  };\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setOffset(selectedPage + 1);\n  };\n\n  useEffect(() => {\n    getData();\n    // eslint-disable-next-line\n  }, [offset]);\n\n  //Mensaje de confirmacion\n  const alertamsg = () => {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: \"top-end\",\n      showConfirmButton: false,\n      timer: 3000,\n      timerProgressBar: true,\n      didOpen: (toast) => {\n        toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n      },\n    });\n\n    Toast.fire({\n      icon: \"success\",\n      title: \"Agregado al carrito\",\n    });\n  };\n\n  return (\n    <section className=\"section\">\n      <label className=\"text-menu\">Menú</label>\n      <Button />\n      <div className=\"platos-menu\">{data}</div>\n      <div>\n        <ReactPaginate\n          previousLabel={\"Anterior\"}\n          nextLabel={\"Siguiente\"}\n          breakLabel={\"...\"}\n          breakClassName={\"break-me\"}\n          pageCount={pageCount}\n          marginPagesDisplayed={2}\n          pageRangeDisplayed={3}\n          onPageChange={handlePageClick}\n          containerClassName={\"pagination\"}\n          activeClassName={\"active\"}\n        />\n      </div>\n    </section>\n  );\n}\n\nexport default usePagination;\n"],"sourceRoot":""}